# Generated by Django 2.2.9 on 2020-01-23 01:02

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('organization', models.BooleanField(default=False, editable=False)),
                ('synced', models.BooleanField(default=False, editable=False)),
                ('last_synced', models.DateTimeField(editable=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='github.Account')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=256)),
                ('history_scaned', models.BooleanField(default=False, editable=False)),
                ('last_history_scaned', models.DateTimeField(editable=False)),
                ('last_ongoing_scaned', models.DateTimeField(editable=False)),
            ],
            options={
                'ordering': ('repository', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.CharField(editable=False, max_length=256)),
                ('author', models.CharField(editable=False, max_length=128)),
                ('comments', models.CharField(editable=False, max_length=512)),
                ('commited', models.DateTimeField(editable=False)),
                ('branch', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Branch')),
            ],
            options={
                'ordering': ('repository', 'branch', 'commited'),
            },
        ),
        migrations.CreateModel(
            name='LeakRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('comments', models.CharField(max_length=64)),
                ('regex', models.CharField(max_length=256)),
                ('keyword', models.BooleanField(default=True)),
                ('exclude_values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('active', models.BooleanField(default=True)),
                ('modified', models.DateTimeField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('scaned', models.BooleanField(default=False, editable=False)),
                ('last_scaned', models.DateTimeField(editable=False, null=True)),
                ('synced', models.BooleanField(default=False, editable=False)),
                ('last_synced', models.DateTimeField(editable=False, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='replistories', to='github.Account')),
            ],
            options={
                'unique_together': {('account', 'name')},
                'ordering': ('account', 'name'),
            },
        ),
        migrations.CreateModel(
            name='ScanStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_scan_time', models.DateTimeField(editable=False)),
                ('end_scan_time', models.DateTimeField(editable=False)),
                ('branch', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Branch')),
                ('end_commit', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit')),
                ('repository', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Repository')),
                ('rule', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='github.LeakRule')),
                ('start_commit', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit')),
            ],
        ),
        migrations.CreateModel(
            name='Leak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(editable=False, max_length=512)),
                ('value', models.CharField(editable=False, max_length=1024)),
                ('details', models.TextField()),
                ('branch', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Branch')),
                ('commit', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit')),
                ('repository', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='leaks', to='github.Repository')),
                ('rule', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='github.LeakRule')),
            ],
        ),
        migrations.AddField(
            model_name='commit',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Repository'),
        ),
        migrations.AddField(
            model_name='branch',
            name='last_scaned_history_commit',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit'),
        ),
        migrations.AddField(
            model_name='branch',
            name='last_scaned_ongoint_commit',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit'),
        ),
        migrations.AddField(
            model_name='branch',
            name='next_ongoing_commit',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='github.Commit'),
        ),
        migrations.AddField(
            model_name='branch',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branches', to='github.Repository'),
        ),
        migrations.AlterUniqueTogether(
            name='commit',
            unique_together={('repository', 'identity')},
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together={('repository', 'name')},
        ),
    ]
